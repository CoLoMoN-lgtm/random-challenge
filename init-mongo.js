// MongoDB initialization script for Docker
// This script runs when MongoDB container starts for the first time

db = db.getSiblingDB('random-challenge');

// Create user for the application
db.createUser({
  user: 'app_user',
  pwd: 'app_password',
  roles: [
    {
      role: 'readWrite',
      db: 'random-challenge'
    }
  ]
});

// Create collections
db.createCollection('categories');
db.createCollection('challenges');

// Insert default categories
db.categories.insertMany([
  {
    name: '–ê–∫—Ç–∏–≤–Ω—ñ',
    emoji: 'üèÉ',
    description: '–§—ñ–∑–∏—á–Ω—ñ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Ç–∞ –≤–ø—Ä–∞–≤–∏'
  },
  {
    name: '–¢–≤–æ—Ä—á—ñ',
    emoji: 'üé®',
    description: '–¢–≤–æ—Ä—á—ñ –∑–∞–≤–¥–∞–Ω–Ω—è —Ç–∞ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ'
  },
  {
    name: '–°–æ—Ü—ñ–∞–ª—å–Ω—ñ',
    emoji: 'ü§ù',
    description: '–í–∑–∞—î–º–æ–¥—ñ—è –∑ –ª—é–¥—å–º–∏'
  },
  {
    name: '–î–æ–º–∞—à–Ω—ñ',
    emoji: 'üè†',
    description: '–î–æ–º–∞—à–Ω—ñ —Å–ø—Ä–∞–≤–∏ —Ç–∞ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è'
  },
  {
    name: '–£—Å–≤—ñ–¥–æ–º–ª–µ–Ω—ñ',
    emoji: 'üßò',
    description: '–ú–µ–¥–∏—Ç–∞—Ü—ñ—è —Ç–∞ —É—Å–≤—ñ–¥–æ–º–ª–µ–Ω—ñ—Å—Ç—å'
  }
]);

// Get category IDs
const categories = db.categories.find().toArray();
const categoryMap = {};
categories.forEach(cat => {
  categoryMap[cat.name] = cat._id;
});

// Insert sample challenges
db.challenges.insertMany([
  // –ê–∫—Ç–∏–≤–Ω—ñ
  {
    text: '–ó—Ä–æ–±—ñ—Ç—å 20 –ø—Ä–∏—Å—ñ–¥–∞–Ω—å',
    categoryId: categoryMap['–ê–∫—Ç–∏–≤–Ω—ñ'],
    difficulty: 'easy'
  },
  {
    text: '–ü—Ä–æ–±—ñ–∂—ñ—Ç—å 2 –∫–º',
    categoryId: categoryMap['–ê–∫—Ç–∏–≤–Ω—ñ'],
    difficulty: 'medium'
  },
  {
    text: '–ó—Ä–æ–±—ñ—Ç—å 50 –≤—ñ–¥–∂–∏–º–∞–Ω—å –ø—Ä–æ—Ç—è–≥–æ–º –¥–Ω—è',
    categoryId: categoryMap['–ê–∫—Ç–∏–≤–Ω—ñ'],
    difficulty: 'hard'
  },
  
  // –¢–≤–æ—Ä—á—ñ
  {
    text: '–ù–∞–º–∞–ª—é–π—Ç–µ —â–æ—Å—å –∑–∞ 5 —Ö–≤–∏–ª–∏–Ω',
    categoryId: categoryMap['–¢–≤–æ—Ä—á—ñ'],
    difficulty: 'easy'
  },
  {
    text: '–ù–∞–ø–∏—à—ñ—Ç—å –∫–æ—Ä–æ—Ç–∫–µ –æ–ø–æ–≤—ñ–¥–∞–Ω–Ω—è –Ω–∞ 500 —Å–ª—ñ–≤',
    categoryId: categoryMap['–¢–≤–æ—Ä—á—ñ'],
    difficulty: 'medium'
  },
  {
    text: '–°—Ç–≤–æ—Ä—ñ—Ç—å –º—É–∑–∏—á–Ω—É –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é',
    categoryId: categoryMap['–¢–≤–æ—Ä—á—ñ'],
    difficulty: 'hard'
  },
  
  // –°–æ—Ü—ñ–∞–ª—å–Ω—ñ
  {
    text: '–ü–æ–¥–∑–≤–æ–Ω—ñ—Ç—å –¥—Ä—É–≥—É, –∑ —è–∫–∏–º –¥–∞–≤–Ω–æ –Ω–µ —Å–ø—ñ–ª–∫—É–≤–∞–ª–∏—Å—å',
    categoryId: categoryMap['–°–æ—Ü—ñ–∞–ª—å–Ω—ñ'],
    difficulty: 'easy'
  },
  {
    text: '–û—Ä–≥–∞–Ω—ñ–∑—É–π—Ç–µ –∑—É—Å—Ç—Ä—ñ—á –∑ –¥—Ä—É–∑—è–º–∏',
    categoryId: categoryMap['–°–æ—Ü—ñ–∞–ª—å–Ω—ñ'],
    difficulty: 'medium'
  },
  {
    text: '–ü—Ä–æ–≤–µ–¥—ñ—Ç—å –º–∞–π—Å—Ç–µ—Ä-–∫–ª–∞—Å –¥–ª—è –∫–æ–≥–æ—Å—å',
    categoryId: categoryMap['–°–æ—Ü—ñ–∞–ª—å–Ω—ñ'],
    difficulty: 'hard'
  },
  
  // –î–æ–º–∞—à–Ω—ñ
  {
    text: '–ü—Ä–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–±–æ—á–∏–π —Å—Ç—ñ–ª',
    categoryId: categoryMap['–î–æ–º–∞—à–Ω—ñ'],
    difficulty: 'easy'
  },
  {
    text: '–ü—Ä–∏–≥–æ—Ç—É–π—Ç–µ –Ω–æ–≤—É —Å—Ç—Ä–∞–≤—É',
    categoryId: categoryMap['–î–æ–º–∞—à–Ω—ñ'],
    difficulty: 'medium'
  },
  {
    text: '–ó—Ä–æ–±—ñ—Ç—å –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–µ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è –æ–¥–Ω—ñ—î—ó –∫—ñ–º–Ω–∞—Ç–∏',
    categoryId: categoryMap['–î–æ–º–∞—à–Ω—ñ'],
    difficulty: 'hard'
  },
  
  // –£—Å–≤—ñ–¥–æ–º–ª–µ–Ω—ñ
  {
    text: '–ú–µ–¥–∏—Ç—É–π—Ç–µ 10 —Ö–≤–∏–ª–∏–Ω',
    categoryId: categoryMap['–£—Å–≤—ñ–¥–æ–º–ª–µ–Ω—ñ'],
    difficulty: 'easy'
  },
  {
    text: '–í–µ–¥—ñ—Ç—å —â–æ–¥–µ–Ω–Ω–∏–∫ –≤–¥—è—á–Ω–æ—Å—Ç—ñ –ø—Ä–æ—Ç—è–≥–æ–º —Ç–∏–∂–Ω—è',
    categoryId: categoryMap['–£—Å–≤—ñ–¥–æ–º–ª–µ–Ω—ñ'],
    difficulty: 'medium'
  },
  {
    text: '–ü—Ä–æ–≤–µ–¥—ñ—Ç—å –¥–µ–Ω—å –±–µ–∑ —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –º–µ—Ä–µ–∂',
    categoryId: categoryMap['–£—Å–≤—ñ–¥–æ–º–ª–µ–Ω—ñ'],
    difficulty: 'hard'
  }
]);

print('Database initialized successfully!');